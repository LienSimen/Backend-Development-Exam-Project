{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Exam project",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Token should manually have been added as a cookie by default but if that does not work the JWT token can be added here with the prefix: Bearer followed by the token"
    }
  },
  "paths": {
    "/admin/": {
      "get": {
        "tags": [
          "Admin Front End"
        ],
        "description": "Admin login page",
        "produces": [
          "text/html"
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/admin/products": {
      "get": {
        "tags": [
          "Admin Front End"
        ],
        "description": "Admin products page",
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/orders": {
      "get": {
        "tags": [
          "Admin Front End"
        ],
        "description": "Admin orders page",
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/brands": {
      "get": {
        "tags": [
          "Admin Front End"
        ],
        "description": "Admin brands page",
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/categories": {
      "get": {
        "tags": [
          "Admin Front End"
        ],
        "description": "Admin categories page",
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/roles": {
      "get": {
        "tags": [
          "Admin Front End"
        ],
        "description": "Admin roles page",
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "tags": [
          "Admin Front End"
        ],
        "description": "Admin users page",
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get all users",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get a single user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Update a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated user details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Register"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Register"
        ],
        "description": "Register new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User information for registering",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Register"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "description": "Login user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/brands/": {
      "get": {
        "tags": [
          "Brand"
        ],
        "description": "Get all brands",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Brand"
        ],
        "description": "Creates a new brand (Admin only)",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Brand details for new brand",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Brand"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/brands/{id}": {
      "put": {
        "tags": [
          "Brand"
        ],
        "description": "Updating a brand (Admin only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Brand ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated details of the brand.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateBrand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Brand"
        ],
        "description": "Deleting brand (Admin only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Brand ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/categories/": {
      "get": {
        "tags": [
          "Category"
        ],
        "description": "Get all categories",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "description": "Creates a new category (Admin only)",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Category details for new category",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/categories/{id}": {
      "put": {
        "tags": [
          "Category"
        ],
        "description": "Updating a category (Admin only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Category ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated details of the category.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "description": "Deleting a category (Admin only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Category ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/cart/": {
      "get": {
        "tags": [
          "Cart"
        ],
        "description": "Get the cart for the logged in user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/cart/add": {
      "post": {
        "tags": [
          "Cart"
        ],
        "description": "Add an item to the cart",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Item details to add to the cart",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/cart/update/{cartItemId}": {
      "patch": {
        "tags": [
          "Cart"
        ],
        "description": "Update the quantity of an item in the cart",
        "parameters": [
          {
            "name": "cartItemId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart Item ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated quantity of the item.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/cart/remove/{cartItemId}": {
      "delete": {
        "tags": [
          "Cart"
        ],
        "description": "Remove an item from the cart with a soft delete",
        "parameters": [
          {
            "name": "cartItemId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart Item ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/cart/checkout/now": {
      "post": {
        "tags": [
          "Cart"
        ],
        "description": "Checkout the cart",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/orders/": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "Get all orders for a user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/orders/all": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "Get all orders (Admin only)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/orders/status/{orderId}": {
      "put": {
        "tags": [
          "Order"
        ],
        "description": "Update the status of an order (Admin only)",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Order ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated status of the order.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Get all products",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "description": "Creates a new product (Admin only)",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Product details for new product",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Get a single product",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "description": "Updating a product (Admin only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated details of the product.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "description": "Deleting a product (Admin only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/membership/": {
      "get": {
        "tags": [
          "Membership"
        ],
        "description": "Get all membership statuses",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Membership"
        ],
        "description": "Creates a new membership status (Admin only)",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Membership status details for new status",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Membership"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/membership/{id}": {
      "put": {
        "tags": [
          "Membership"
        ],
        "description": "Updating a membership status (Admin only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated details of the membership status.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMembership"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Membership"
        ],
        "description": "Deleting a membership status (Admin only)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Membership ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/init/": {
      "post": {
        "tags": [
          "Init"
        ],
        "description": "Initialize the database",
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/search/": {
      "post": {
        "tags": [
          "Search"
        ],
        "description": "Search for products, brands or categories",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Search criteria, use productName, categoryName or brandName",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Search"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/roles/": {
      "get": {
        "tags": [
          "Role"
        ],
        "description": "Get all roles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "definitions": {
    "Register": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "username": {
          "type": "string",
          "example": "johndoe"
        },
        "email": {
          "type": "string",
          "example": "johndoe@example.com"
        },
        "password": {
          "type": "string",
          "example": "password"
        },
        "address": {
          "type": "string",
          "example": "Exampleville 22"
        },
        "telephoneNumber": {
          "type": "string",
          "example": "52414144"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "username",
        "email",
        "password",
        "address",
        "telephoneNumber"
      ]
    },
    "Login": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "johndoe"
        },
        "password": {
          "type": "string",
          "example": "password"
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "Brand": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Sony Ericsson"
        }
      },
      "required": [
        "name"
      ]
    },
    "UpdateBrand": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Sony Mobile Communications"
        }
      },
      "required": [
        "name"
      ]
    },
    "Category": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Gaming Consoles"
        }
      },
      "required": [
        "name"
      ]
    },
    "UpdateCategory": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Gaming Systems"
        }
      },
      "required": [
        "name"
      ]
    },
    "Product": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Playstation 5"
        },
        "description": {
          "type": "string",
          "example": "Sony's latest gaming console"
        },
        "price": {
          "type": "number",
          "example": 699
        },
        "quantity": {
          "type": "number",
          "example": 10
        },
        "discount": {
          "type": "number",
          "example": 0
        },
        "categoryId": {
          "type": "number",
          "example": 1
        },
        "brandId": {
          "type": "number",
          "example": 1
        },
        "isDeleted": {
          "type": "boolean",
          "example": false
        },
        "imgURL": {
          "type": "string",
          "example": "https://gmedia.playstation.com/is/image/SIEPDC/ps5-product-thumbnail-01-en-14sep21"
        }
      },
      "required": [
        "name",
        "description",
        "price",
        "quantity",
        "discount",
        "categoryId",
        "brandId",
        "isDeleted",
        "imgURL"
      ]
    },
    "UpdateProduct": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Playstation 6"
        },
        "description": {
          "type": "string",
          "example": "Sony's futuristic gaming console"
        },
        "price": {
          "type": "number",
          "example": 8000
        },
        "quantity": {
          "type": "number",
          "example": 0
        },
        "discount": {
          "type": "number",
          "example": 0
        },
        "categoryId": {
          "type": "number",
          "example": 1
        },
        "brandId": {
          "type": "number",
          "example": 1
        },
        "isDeleted": {
          "type": "boolean",
          "example": false
        },
        "imgURL": {
          "type": "string",
          "example": "https://i.ytimg.com/vi/QNwJdTqZvts/maxresdefault.jpg"
        }
      },
      "required": [
        "name",
        "description",
        "price",
        "quantity",
        "discount",
        "categoryId",
        "brandId",
        "isDeleted",
        "imgURL"
      ]
    },
    "Membership": {
      "type": "object",
      "properties": {
        "statusName": {
          "type": "string",
          "example": "Platinum"
        },
        "discount": {
          "type": "number",
          "example": 50
        }
      },
      "required": [
        "statusName",
        "discount"
      ]
    },
    "UpdateMembership": {
      "type": "object",
      "properties": {
        "statusName": {
          "type": "string",
          "example": "Diamond"
        },
        "discount": {
          "type": "number",
          "example": 50
        }
      },
      "required": [
        "statusName",
        "discount"
      ]
    },
    "Search": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string",
          "example": "iPhone"
        },
        "categoryName": {
          "type": "string",
          "example": "Phones"
        },
        "brandName": {
          "type": "string",
          "example": "Apple"
        }
      },
      "required": [
        "productName",
        "categoryName",
        "brandName"
      ]
    },
    "Cart": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "number",
          "example": 1
        },
        "quantity": {
          "type": "number",
          "example": 1
        }
      },
      "required": [
        "productId",
        "quantity"
      ]
    },
    "UpdateCart": {
      "type": "object",
      "properties": {
        "productId": {
          "type": "number",
          "example": 1
        },
        "quantity": {
          "type": "number",
          "example": 2
        }
      },
      "required": [
        "productId",
        "quantity"
      ]
    },
    "Order": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "Ordered"
        }
      },
      "required": [
        "status"
      ]
    }
  }
}